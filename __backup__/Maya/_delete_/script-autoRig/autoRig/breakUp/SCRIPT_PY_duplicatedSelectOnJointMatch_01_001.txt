import maya.cmds
import random
import math


#### START - Common Methods ###############################################################################################################################################################################

#### START - UI Methods     ###############################################################################################################################################################################
def deleteWindow( windowName ):
	exist = maya.cmds.window( windowName, exists=True )
	if(exist == 1):
		maya.cmds.deleteUI(windowName, window=True)
#### END   - UI Methods     ###############################################################################################################################################################################

def getWStransform(obj):
	transform = maya.cmds.xform( obj, q=True, ws=True, t=True )
	return transform

def testNodeType(node,type):
	value = True
	nodeType = maya.cmds.objectType( node )
	if( nodeType != type ):
		value = False
		#print 'WARNING:: testNodeType : ' + str(nodeType) + ' does not match ' + type + '/n'
	return value

def getWSrotate(obj):
	rotate = maya.cmds.xform( obj, q=True, ws=True, ro=True )
	return rotate

def setWStransform(obj,position):
	maya.cmds.xform( obj, ws=True, t=(position[0],position[1],position[2]) )

def setWSrotate(obj,rotate):
	maya.cmds.xform( obj, ws=True, ro=(rotate[0],rotate[1],rotate[2]) )

def findName(name,token):
	newName = name[len(token):len(name)]	
	return newName

def duplicatedSelectedOnJointMatch(jointArray,obj):
	returnArray = []
	#previousObj = jointArray[0] + '_CTRL'
	
	for j in range(0,len(jointArray),1):
		name = jointArray[j] + '_CTRL'
		currentObj = maya.cmds.duplicate(obj,n=name)[0]
		print('duplicatedSelectedOnJointChain :: currentObj = ' + str(currentObj))
		constainLocator = maya.cmds.parentConstraint(jointArray[j], currentObj, weight=1 )
		maya.cmds.delete(constainLocator)
		returnArray.append(currentObj)

		
		#previousObj = currentObj

	return returnArray

###############################################################################################
#     SELECT:	
###############################################################################################
sel = maya.cmds.ls(selection=True)
obj = maya.cmds.ls(selection=True,tail=1)

joints = []
for j in range(0,len(sel)-1,1):
	joints.append(sel[j])

duplicatedSelectedOnJointMatch(joints,obj)