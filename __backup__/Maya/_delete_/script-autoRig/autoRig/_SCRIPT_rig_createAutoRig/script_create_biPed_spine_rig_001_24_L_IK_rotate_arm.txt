
//START++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//CONNECT WRIST CONTROLS TO THE "L_armTweak_AV"       ======================================================
//============================================================================================================
//============================================================================================================
//print("__________________________CONNECT WRIST CONTROLS TO THE "L_armTweak_AV"__________________________");
//last selected node will be your connector
//INSTRUCTIONS;
//1.select arm Deform joints starting with the wrist to the Shoulder
//2. Check your naming conventions of the group nodes that the Deform controls are parented to and the Ik and FK wrist controls are


string $sel[] = `ls -sl`;
float $howManyJoints = size($sel);//eg; 5
//string $last[] = `ls -sl -tail 1`;
float $howManyNodes = ceil($howManyJoints / 3);

int $i;
int $j;
int $whichJoint; 
int $count = 1;
int $break = 0;


//ensure that the controllers are created
string $IKwristCtrl = "IK_L_CTRL_wrist";
string $FKwristCtrl = "FK_L_CTRL_wrist";


string $IKrotateMultiply = "IK_L_arm_rotator_multiplyDivide";
string $FKrotateMultiply = "FK_L_arm_rotator_multiplyDivide";
string $IKFKrotateBlend =  "IKFK_L_arm_blend";
string $armTweak_AV = "L_DEFORM_arm_tweak_AV";



//create multiply and blend nodes 

for ($i = 0; $i < $howManyNodes; $i++){

	string $multiplierNode = `shadingNode -n ($IKrotateMultiply + "1") -asUtility multiplyDivide`;
	string $multiplierNode = `shadingNode -n ($FKrotateMultiply + "1") -asUtility multiplyDivide`;
	string $multiplierNode = `shadingNode -n ($IKFKrotateBlend + "1") -asUtility blendColors`;


	//Connect Multiple nodes to blend
	int $offset = $i + 1;
	
	string $whichAxis[3] = {"X", "Y", "Z"};
	string $whichColour[3] = {"R", "B", "G"};
	
	for($j = 0; $j < $howManyNodes; $j++){
		
		if($break == 0){
			string $IKconnector = $IKrotateMultiply + $offset + ".output" + $whichAxis[$j];
			string $FKconnector = $FKrotateMultiply + $offset + ".output" + $whichAxis[$j];
			string $IKsocket = $IKFKrotateBlend + $offset + ".color1" + $whichColour[$j];//IK
			string $FKsocket = $IKFKrotateBlend + $offset + ".color2" + $whichColour[$j];//FK
		
			connectAttr -force $IKconnector $IKsocket;
			connectAttr -force $FKconnector $FKsocket;

		

			//connect IK wrist control to Multiply nodes
			string $IKsocket = $IKrotateMultiply + $offset + ".input1" + $whichAxis[$j];
			string $FKsocket = $FKrotateMultiply + $offset + ".input1" + $whichAxis[$j];

			string $IKconnector = $IKwristCtrl + ".rotateX";
			string $FKconnector = $FKwristCtrl + ".rotateX";

			connectAttr -force $IKconnector $IKsocket;
			connectAttr -force $FKconnector $FKsocket;

			//increment up the suffix to conect to "L_armTweak_AV"
			string $connector = $IKFKrotateBlend + $offset + ".output" + $whichColour[$j];
			string $socket = $armTweak_AV + $count + ".rotateX";
		
			connectAttr -force $connector $socket;

			$count = $count + 1;

			if($count > $howManyJoints){
				$break = 1;
				print $count;
			}
		}
	}
}
//============================================================================================================
//============================================================================================================
//END++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//^^^^^^^^^^^^^^^-----TESTED AND WORKS-----^^^^^^^^^^^^^^^!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!